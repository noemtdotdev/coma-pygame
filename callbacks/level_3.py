import pygame
from classes.image import Image
from classes.cursor import Cursor
from classes.popup import Popup
import json
import random

def level_3(main_screen):
    clock = pygame.time.Clock()
    screen_width, screen_height = 1792 // 1.5, 1121 // 1.5
    main_screen = pygame.display.set_mode((screen_width, screen_height))
    screen_surface = pygame.Surface((screen_width, screen_height))
    pygame.display.set_caption("Level 3 - Geographie")

    font_path = "assets/font.ttf"
    font_size = 20
    font = pygame.font.Font(font_path, font_size)

    BUTTON_COLOR = (100, 100, 250)
    BUTTON_HOVER_COLOR = (150, 150, 255)
    BACKGROUND_COLOR = (30, 30, 30)
    TEXT_COLOR = (0, 0, 0)

    countries = {
        "die Vereinigten Staaten": [[(183, 152), (271, 162), (265, 170), (268, 171), (277, 171), (288, 171), (280, 175), (274, 175), (272, 182), (270, 188), (270, 192), (278, 187), (282, 181), (286, 180), (289, 185), (283, 188), (284, 192), (289, 196), (296, 189), (306, 187), (318, 180), (326, 178), (330, 174), (336, 166), (343, 166), (351, 172), (353, 178), (347, 183), (342, 187), (343, 178), (338, 180), (332, 184), (326, 185), (326, 192), (317, 194), (310, 201), (305, 206), (300, 210), (300, 201), (296, 208), (294, 212), (296, 217), (298, 219), (293, 220), (286, 223), (278, 231), (273, 234), (270, 248), (270, 254), (268, 257), (262, 258), (262, 253), (262, 245), (261, 241), (252, 237), (246, 237), (246, 245), (237, 243), (227, 241), (218, 242), (209, 248), (208, 251), (205, 243), (203, 240), (194, 239), (193, 232), (187, 229), (179, 231), (169, 227), (160, 222), (155, 223), (150, 219), (150, 212), (151, 204), (150, 196), (150, 191), (155, 183), (162, 176), (167, 167), (171, 159), (174, 157), (178, 161), (181, 157)]],
        "Kanada": [[(183, 150), (271, 162), (284, 160), (288, 166), (296, 174), (299, 178), (291, 179), (292, 183), (293, 189), (296, 186), (304, 186), (307, 182), (311, 180), (317, 178), (327, 178), (332, 172), (335, 165), (343, 162), (363, 173), (372, 172), (374, 176), (380, 175), (385, 172), (386, 165), (381, 164), (382, 159), (385, 149), (378, 140), (375, 130), (370, 122), (394, 91), (391, 77), (385, 68), (370, 68), (369, 64), (379, 59), (389, 53), (394, 49), (410, 43), (426, 39), (441, 33), (442, 27), (425, 25), (412, 23), (400, 24), (386, 27), (369, 31), (369, 37), (364, 41), (359, 41), (355, 41), (350, 39), (347, 35), (329, 37), (324, 40), (319, 43), (316, 41), (309, 38), (305, 38), (299, 45), (295, 49), (288, 49), (279, 54), (272, 60), (259, 62), (248, 62), (234, 65), (225, 64), (179, 97), (192, 100), (193, 112), (190, 121), (180, 134), (180, 139), (182, 153)]],
        "Deutschland": [[(569, 176), (577, 174), (586, 175), (589, 170), (586, 166), (586, 163), (587, 161), (590, 157), (588, 151), (584, 150), (580, 152), (576, 148), (573, 149), (570, 152), (570, 157), (569, 160), (566, 164), (569, 170), (567, 173)]],
        "Österreich": [[(587, 170), (596, 168), (599, 173), (597, 175), (596, 178), (590, 178), (583, 179), (580, 178), (575, 176), (581, 175)]],
        "Frankreich": [[(555, 197), (556, 195), (556, 191), (561, 191), (564, 195), (568, 192), (569, 185), (565, 183), (564, 182), (565, 179), (567, 175), (566, 171), (564, 171), (558, 165), (554, 161), (551, 165), (550, 170), (545, 171), (543, 168), (538, 169), (536, 171), (534, 171), (539, 176), (544, 182), (543, 187), (541, 193), (545, 198), (550, 197), (553, 195), (558, 201), (558, 193), (566, 191)], [(353, 361), (358, 354), (348, 344), (349, 349), (348, 353)]],
        "Spanien": [[(523, 220), (524, 200), (518, 199), (517, 195), (518, 192), (524, 192), (528, 192), (533, 193), (538, 192), (542, 194), (547, 199), (553, 199), (553, 202), (552, 204), (548, 204), (546, 205), (546, 210), (546, 211), (543, 215), (543, 218), (541, 218), (538, 219), (535, 221), (531, 220), (526, 220)]],
        "Italien": [[(592, 214), (584, 214), (584, 217), (588, 219), (590, 220), (592, 221), (594, 216), (594, 214), (601, 212), (604, 205), (598, 201), (595, 198), (589, 194), (587, 192), (587, 188), (587, 186), (588, 182), (585, 181), (581, 180), (579, 181), (578, 183), (575, 184), (570, 184), (569, 186), (570, 191), (574, 190), (577, 190), (580, 193), (584, 197), (586, 201), (590, 206), (596, 212)]],
        "das Vereinigte Königreich": [[(537, 126), (540, 129), (542, 131), (543, 136), (545, 140), (546, 145), (548, 152), (548, 155), (553, 153), (555, 156), (551, 159), (549, 161), (544, 161), (540, 161), (535, 161), (530, 165), (532, 161), (535, 156), (530, 153), (527, 150), (525, 147), (525, 142), (530, 139), (530, 134), (531, 129)]],
        "Russland": [[(1012, 79), (1012, 74), (1010, 70), (1002, 68), (992, 67), (979, 64), (951, 60), (945, 61), (947, 67), (942, 68), (933, 63), (925, 67), (918, 64), (905, 67), (902, 61), (894, 63), (891, 60), (887, 62), (882, 60), (878, 48), (865, 45), (859, 47), (848, 49), (847, 53), (847, 63), (843, 60), (835, 59), (830, 62), (823, 62), (819, 59), (796, 67), (797, 63), (802, 60), (804, 56), (804, 52), (778, 47), (768, 41), (762, 41), (751, 39), (746, 33), (742, 32), (739, 39), (701, 52), (693, 55), (688, 57), (684, 57), (681, 63), (675, 74), (679, 89), (665, 89), (660, 91), (657, 92), (640, 81), (635, 87), (628, 82), (627, 95), (631, 105), (633, 109), (630, 116), (629, 122), (630, 125), (628, 130), (630, 134), (638, 137), (639, 146), (644, 148), (646, 152), (653, 156), (657, 161), (664, 161), (668, 167), (669, 173), (666, 177), (666, 185), (666, 188), (670, 191), (675, 186), (678, 187), (684, 189), (689, 189), (695, 193), (695, 187), (698, 183), (701, 179), (695, 177), (691, 172), (691, 167), (693, 164), (696, 162), (696, 158), (700, 156), (706, 154), (709, 159), (711, 159), (714, 158), (718, 158), (728, 157), (728, 153), (731, 152), (735, 150), (742, 146), (746, 144), (751, 139), (756, 139), (758, 142), (765, 145), (772, 140), (776, 144), (781, 150), (790, 152), (796, 156), (799, 152), (802, 158), (806, 162), (810, 161), (817, 159), (817, 153), (830, 153), (832, 157), (839, 157), (840, 154), (839, 149), (846, 149), (852, 151), (858, 153), (863, 151), (869, 153), (885, 152), (895, 149), (897, 146), (897, 141), (907, 138), (912, 141), (919, 146), (928, 153), (935, 156), (942, 152), (947, 157), (952, 152), (954, 165), (949, 171), (954, 178), (965, 178), (967, 165), (984, 158), (1002, 134), (1003, 127), (996, 118), (992, 110), (990, 104), (984, 104), (982, 99), (995, 97), (998, 90), (1002, 86)]],
        "China": [[(911, 138), (916, 142), (920, 145), (925, 151), (930, 154), (934, 154), (936, 154), (941, 155), (943, 157), (948, 158), (951, 154), (953, 154), (956, 159), (956, 164), (955, 168), (951, 170), (952, 173), (955, 177), (951, 180), (949, 185), (946, 190), (944, 193), (940, 194), (939, 196), (935, 191), (931, 190), (930, 192), (929, 198), (925, 198), (923, 200), (926, 207), (932, 206), (940, 207), (942, 212), (940, 215), (939, 217), (939, 221), (945, 226), (947, 229), (948, 233), (950, 240), (953, 239), (956, 243), (956, 248), (951, 249), (951, 254), (951, 258), (946, 262), (941, 267), (938, 271), (934, 272), (931, 275), (926, 280), (924, 275), (920, 273), (916, 273), (911, 273), (909, 268), (904, 270), (901, 272), (896, 274), (893, 276), (891, 277), (887, 274), (887, 269), (885, 268), (880, 265), (879, 259), (880, 253), (868, 245), (859, 249), (844, 249), (836, 248), (828, 244), (819, 241), (814, 238), (812, 232), (812, 228), (807, 223), (798, 218), (791, 213), (790, 207), (786, 207), (786, 204), (787, 203), (790, 200), (793, 198), (796, 194), (801, 190), (801, 186), (799, 182), (803, 181), (803, 179), (804, 174), (809, 169), (810, 165), (814, 164), (816, 166), (819, 171), (826, 174), (833, 179), (841, 181), (843, 181), (845, 185), (850, 185), (862, 186), (867, 190), (875, 190), (882, 190), (886, 188), (899, 176), (907, 168), (911, 164), (901, 161), (899, 157), (900, 152), (897, 146), (897, 142), (897, 140)]],
        "Japan": [[(980, 234), (977, 231), (974, 228), (973, 225), (972, 221), (975, 221), (977, 224), (980, 227), (981, 229)], [(975, 214), (984, 215), (988, 219), (993, 218), (995, 213), (998, 208), (1004, 207), (1000, 201), (997, 195), (996, 190), (994, 186), (990, 182), (986, 184), (989, 192), (990, 197), (990, 202), (987, 206), (983, 208), (978, 211)], [(983, 178), (981, 168), (984, 167), (987, 167), (991, 169), (997, 175), (996, 179), (992, 179), (987, 180), (985, 180)]],
        "Indien": [[(816, 333), (820, 326), (823, 323), (825, 315), (826, 310), (825, 306), (828, 297), (834, 292), (838, 290), (841, 283), (848, 279), (846, 258), (838, 256), (830, 256), (821, 251), (815, 252), (816, 242), (812, 234), (803, 226), (799, 221), (791, 224), (788, 231), (798, 232), (797, 238), (794, 242), (795, 247), (792, 249), (788, 252), (784, 253), (782, 258), (787, 261), (791, 263), (786, 267), (781, 269), (778, 272), (784, 278), (791, 281), (794, 283), (797, 278), (797, 284), (798, 291), (802, 299), (806, 308), (804, 314), (813, 318), (812, 330)]],
        "Brasilien": [[(367, 505), (369, 497), (373, 499), (376, 494), (377, 489), (376, 482), (373, 474), (379, 465), (388, 464), (396, 462), (399, 457), (403, 454), (404, 448), (407, 436), (405, 429), (403, 425), (413, 421), (415, 413), (417, 406), (414, 395), (407, 386), (403, 384), (396, 383), (388, 379), (385, 383), (380, 383), (381, 376), (377, 371), (371, 372), (367, 376), (363, 380), (363, 372), (363, 367), (357, 373), (362, 361), (361, 357), (359, 355), (356, 363), (340, 361), (331, 364), (324, 350), (312, 356), (318, 364), (304, 368), (298, 363), (295, 364), (294, 372), (295, 378), (293, 385), (289, 391), (284, 394), (283, 401), (284, 407), (282, 412), (291, 407), (294, 417), (299, 418), (304, 411), (309, 411), (313, 414), (312, 420), (312, 421), (318, 423), (323, 427), (330, 433), (334, 437), (340, 447), (340, 451), (341, 464), (347, 460), (354, 469), (356, 478), (357, 482), (356, 487), (352, 492), (350, 496), (349, 497), (357, 501), (362, 502)]],
        "Mexiko": [[(154, 225), (164, 225), (171, 229), (178, 231), (182, 231), (185, 228), (195, 234), (196, 241), (200, 240), (202, 243), (209, 253), (211, 258), (211, 261), (209, 264), (207, 276), (209, 284), (212, 287), (218, 288), (223, 287), (227, 283), (229, 279), (233, 277), (238, 275), (241, 276), (242, 280), (239, 282), (239, 286), (237, 289), (230, 289), (222, 292), (223, 297), (217, 301), (212, 300), (211, 298), (204, 300), (199, 300), (191, 295), (185, 290), (181, 287), (177, 284), (176, 281), (177, 275), (179, 270), (175, 263), (173, 255), (172, 250), (167, 246), (164, 244), (164, 239), (166, 234), (166, 232), (163, 231), (159, 231), (159, 237), (161, 243), (161, 248), (164, 252), (164, 260), (165, 264), (164, 269), (161, 269), (160, 264), (158, 257), (155, 252), (155, 246), (152, 246), (157, 243), (157, 239), (153, 236), (153, 232), (154, 227)]],
        "Australien": [[(1000, 562), (1009, 560), (1012, 556), (1012, 553), (1006, 552), (1002, 552), (1001, 558)], [(1049, 419), (1045, 419), (1043, 423), (1041, 427), (1041, 433), (1041, 439), (1038, 442), (1036, 447), (1033, 443), (1032, 439), (1026, 437), (1022, 433), (1027, 425), (1031, 421), (1030, 418), (1025, 421), (1020, 422), (1016, 419), (1011, 418), (1007, 417), (1011, 424), (1007, 426), (1002, 426), (1001, 432), (1001, 436), (993, 436), (993, 427), (989, 432), (983, 434), (982, 437), (980, 442), (976, 444), (975, 441), (972, 441), (972, 445), (971, 450), (969, 455), (962, 456), (956, 456), (950, 458), (945, 458), (941, 460), (937, 470), (935, 475), (934, 479), (930, 479), (932, 484), (935, 489), (934, 499), (931, 505), (929, 510), (925, 514), (925, 518), (932, 522), (938, 522), (939, 518), (943, 516), (950, 516), (957, 516), (963, 512), (970, 511), (977, 507), (988, 508), (989, 518), (995, 520), (999, 513), (1000, 521), (996, 526), (999, 529), (998, 539), (1003, 544), (1008, 540), (1013, 540), (1012, 545), (1017, 542), (1022, 541), (1026, 540), (1029, 535), (1033, 532), (1040, 526), (1045, 522), (1054, 515), (1055, 508), (1062, 498), (1067, 489), (1062, 478), (1066, 468), (1060, 469), (1057, 465), (1059, 461), (1055, 454), (1053, 451), (1054, 444), (1053, 438), (1052, 436), (1049, 434), (1048, 428), (1048, 426)]],
        "Südafrika": [[(650, 459), (641, 459), (639, 464), (630, 467), (634, 471), (631, 474), (623, 474), (620, 477), (620, 480), (615, 480), (613, 483), (611, 486), (603, 485), (599, 485), (599, 489), (601, 494), (603, 500), (603, 503), (607, 504), (614, 509), (622, 510), (628, 508), (632, 504), (638, 503), (644, 499), (647, 492), (650, 485), (653, 482), (649, 477), (646, 478), (646, 473), (650, 471), (651, 463)]],
        "Ägypten": [[(631, 240), (629, 248), (632, 257), (632, 268), (631, 278), (641, 280), (657, 281), (668, 281), (664, 269), (658, 258), (656, 254), (661, 254), (657, 241), (646, 242), (642, 245), (636, 242), (633, 241)]],
        "Saudi-Arabien": [[(662, 254), (690, 299), (693, 296), (701, 298), (705, 300), (708, 299), (711, 295), (716, 292), (726, 292), (728, 288), (731, 282), (738, 275), (732, 275), (725, 275), (722, 273), (721, 269), (718, 262), (711, 259), (707, 253), (703, 254), (698, 253), (698, 247), (690, 247), (684, 246), (684, 239), (676, 238), (674, 242), (672, 247), (665, 250), (664, 250)]],
        "Türkei": [[(641, 198), (646, 201), (649, 201), (651, 198), (653, 195), (661, 193), (666, 198), (671, 201), (681, 200), (685, 205), (690, 211), (690, 216), (680, 215), (667, 216), (665, 220), (661, 221), (661, 216), (655, 221), (649, 220), (646, 218), (644, 222), (639, 222), (637, 223), (636, 221), (636, 216), (634, 215), (631, 212), (631, 208), (635, 208)]],
        "Argentinien": [[(332, 603), (343, 585), (344, 580), (346, 574), (346, 570), (338, 566), (340, 559), (343, 553), (345, 547), (341, 547), (338, 542), (343, 540), (347, 541), (347, 536), (346, 533), (354, 532), (358, 531), (359, 525), (357, 518), (354, 515), (350, 509), (345, 498), (351, 491), (359, 482), (357, 477), (354, 483), (344, 482), (342, 477), (343, 474), (339, 477), (335, 474), (332, 469), (328, 466), (323, 463), (320, 467), (318, 467), (313, 467), (311, 470), (310, 477), (310, 486), (309, 493), (311, 501), (314, 509), (314, 517), (314, 530), (318, 535), (323, 546), (327, 560), (330, 573), (335, 585)]],
        "Nigeria": [[(552, 339), (557, 310), (565, 310), (574, 315), (585, 315), (590, 315), (591, 321), (592, 327), (587, 334), (583, 339), (583, 343), (576, 343), (573, 343), (572, 348), (570, 352), (563, 353), (562, 353), (562, 349), (557, 346)]],
        "Indonesien": [[(884, 347), (883, 351), (886, 356), (892, 362), (896, 371), (903, 381), (906, 390), (913, 397), (920, 400), (931, 403), (940, 407), (946, 411), (961, 409), (982, 414), (986, 414), (989, 411), (995, 407), (1030, 404), (1043, 410), (1045, 398), (1044, 389), (1045, 379), (1037, 379), (1032, 380), (1028, 383), (1024, 381), (1024, 375), (1024, 373), (1023, 371), (1016, 370), (1014, 370), (1001, 365), (989, 360), (979, 361), (974, 363), (962, 351), (960, 350), (959, 351), (956, 355), (956, 357), (956, 360), (955, 363), (950, 365), (939, 366), (937, 367), (935, 363), (931, 361), (910, 366), (901, 359), (896, 354)]],
        "Südkorea": [[(957, 203), (956, 213), (960, 219), (966, 213), (968, 211), (964, 204), (959, 200)]],
        "Pakistan": [[(755, 264), (759, 253), (752, 251), (750, 248), (755, 246), (759, 246), (764, 243), (770, 239), (776, 230), (778, 223), (784, 217), (790, 215), (799, 218), (801, 221), (798, 223), (793, 223), (790, 226), (790, 229), (794, 231), (798, 234), (799, 238), (796, 239), (796, 245), (792, 249), (788, 251), (784, 252), (782, 258), (785, 262), (784, 267), (777, 270), (776, 265), (772, 264), (764, 264), (760, 265)]],
    }

    cursor = Cursor()
    country_names = list(countries.keys())
    random.shuffle(country_names)
    current_country_index = 0
    polygons_to_draw = []
    popup = Popup("In diesem Level musst du auf das Land drücken, welches dir angezeigt wird.", 1000, 500)

    running = True
    while running:
        screen_surface.fill(BACKGROUND_COLOR)

        mouse_pos = pygame.mouse.get_pos()
        ok_button = pygame.Rect(screen_width - 60, 20, 40, 40)

        overlay_image = Image("assets/overlay_level_3.png", (screen_width, screen_height)).image
        screen_surface.blit(overlay_image, (0, 0))

        if ok_button.collidepoint(mouse_pos):
            pygame.draw.rect(screen_surface, BUTTON_HOVER_COLOR, ok_button)
            cursor.set_hand_cursor()
        else:
            pygame.draw.rect(screen_surface, BUTTON_COLOR, ok_button)

        ok_text = font.render("X", True, (255, 255, 255))
        ok_text_rect = ok_text.get_rect(center=ok_button.center)
        screen_surface.blit(ok_text, ok_text_rect)

        if current_country_index < len(country_names):
            current_country = country_names[current_country_index]
            country_text = font.render(f"Drücke auf {current_country}", True, TEXT_COLOR)
            country_text_rect = country_text.get_rect(center=(screen_width // 2, screen_height - 20))
            screen_surface.blit(country_text, country_text_rect)

        else:
            with open("levels.json", "r") as file:
                levels_data = json.load(file)["levels"]

            levels_data[3]["unlocked"] = True
            levels_data[2]["completed"] = True

            with open("levels.json", "w") as file:
                json.dump({"levels": levels_data}, file)

            running = False

        for polygons in polygons_to_draw:
            for polygon in polygons:
                pygame.draw.polygon(screen_surface, (0, 255, 20), polygon, 3)

        for event in pygame.event.get():

            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if ok_button.collidepoint(mouse_pos):
                    running = False

                if not popup.visible:
                    current_country = country_names[current_country_index]
                    for polygon in countries[current_country]:
                        if pygame.draw.polygon(screen_surface, (0, 0, 0), polygon, 1).collidepoint(mouse_pos):
                            current_country_index += 1
                            polygons_to_draw.append(countries[current_country])
                            break

            if popup.visible:
                popup.handle_event(event)

        if popup.visible:
            popup.draw(screen_surface)
        else:
            if ok_button.collidepoint(mouse_pos):
                cursor.set_hand_cursor()
            else:
                cursor.default()

        main_screen.blit(screen_surface, (0, 0))
        pygame.display.flip()
        clock.tick(60)

if __name__ == "__main__":
    pygame.init()
    main_screen = pygame.display.set_mode((1300, 873))
    level_3(main_screen)
    pygame.quit()